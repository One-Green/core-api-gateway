# Run all Plant keeper services
# - Plant-keeper django REST Api Gateway
# - Plant-keeper Prometheus client server
# - Plant-keeper device controller
# - Postgres database
# - Prometheus server
# - Grafana server
#
# Author : Vigneswaran Shanmugathas
# mail : shamugathas.vigneswaran@outlook.fr

version: "3.7"

services:

  loki:
    image: grafana/loki:master-89263b0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    volumes:
    - ./confs/loki.yaml:/etc/loki/loki.yaml


  promtail:
    network_mode: host
    image: grafana/promtail:latest
    volumes:
      - ./confs/promtail-docker-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    ports:
      - "9080:9080"

  db:
    image: timescale/timescaledb:latest-pg11
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
    - ./confs/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    ports:
      - 5432:5432

  api-gateway:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "bash init.sh && gunicorn --workers=3 --bind 0.0.0.0:8001 plant_kiper.wsgi"
    restart: always
    ports:
      - 8001:8001
    depends_on:
      - db
      - loki

  air-humidifier-ctl:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "cd controllers && python air_humidifier.py"
    environment:
      - CONTROLLERS_LOOP_EVERY=2
    restart: always
    depends_on:
      - db
      - loki
      - api-gateway

  cooler-ctl:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "cd controllers && python  cooler.py"
    environment:
      - CONTROLLERS_LOOP_EVERY=2
    restart: always
    depends_on:
      - db
      - loki
      - api-gateway

  heater-ctl:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "cd controllers && python heater.py"
    environment:
      - CONTROLLERS_LOOP_EVERY=2
    restart: always
    depends_on:
      - db
      - loki
      - api-gateway

  sprinklers-ctl:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "cd controllers && python sprinklers.py"
    environment:
      - CONTROLLERS_LOOP_EVERY=2
    restart: always
    depends_on:
      - db
      - loki
      - api-gateway


  grafana:
    image: grafana/grafana:6.7.1
    restart: always
    environment:
      - GF_INSTALL_PLUGINS=grafana-polystat-panel,jdbranham-diagram-panel,agenty-flowcharting-panel,pierosavi-imageit-panel,scadavis-synoptic-panel
    ports:
     - 3000:3000
    volumes:
    - "grafana_data:/var/lib/grafana"
    depends_on:
      - db
      - loki
      - api-gateway

volumes:
  grafana_data:
