apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
        - name: initdb
          image: docker.io/shanisma/pk-k8s:0.0.1
          command: ['/bin/bash', '-c']
          args: ["python init.py"]
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST
              value: "db"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "postgres"
            - name: MQTT_HOST
              value: "mqtt"
            - name: MQTT_PORT
              value: "1883"
      containers:
      - name: api
        image: docker.io/shanisma/pk-k8s:0.0.1
        command: ['/bin/bash', '-c']
        args: ['gunicorn --workers=1 --bind=0.0.0.0:8080 --access-logfile - --log-file - --log-level=debug project.wsgi']
        imagePullPolicy: Always
        env:
          - name: POSTGRES_HOST
            value: "db"
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          - name: POSTGRES_DB
            value: "postgres"
          - name: MQTT_HOST
            value: "mqtt"
          - name: MQTT_PORT
            value: "1883"
        ports:
          - containerPort: 8080
            name: api
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - port: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.af120153-db6a-4fdd-a81b-6d902b00e936.nodes.k8s.fr-par.scw.cloud
    http:
      paths:
      - path: /
        backend:
          serviceName: api
          servicePort: 8080
